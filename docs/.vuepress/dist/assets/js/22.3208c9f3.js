(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{188:function(t,a,s){"use strict";s.r(a);var n=s(0),o=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"交易-transaction"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交易-transaction","aria-hidden":"true"}},[t._v("#")]),t._v(" 交易(Transaction)")]),t._v(" "),s("h2",{attrs:{id:"什么是交易"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是交易","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是交易?")]),t._v(" "),s("p",[t._v("交易(Transaction)是每个区块链中的核心逻辑")]),t._v(" "),s("p",[t._v("交易在以下场景中会发生:")]),t._v(" "),s("ol",[s("li",[t._v("地址与地址间发送 Token.")]),t._v(" "),s("li",[t._v("地址于地址间发送消息.")]),t._v(" "),s("li",[t._v("部署或者调用智能合约.")])]),t._v(" "),s("p",[t._v("交易 "),s("strong",[t._v("不会")]),t._v(" 在以下场景发生:")]),t._v(" "),s("ol",[s("li",[t._v("帐号的创建和导入")]),t._v(" "),s("li",[t._v("使用 RPC 对区块链信息进行查询")])]),t._v(" "),s("h2",{attrs:{id:"应当熟记的交易逻辑"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#应当熟记的交易逻辑","aria-hidden":"true"}},[t._v("#")]),t._v(" 应当熟记的交易逻辑")]),t._v(" "),s("p",[t._v("链上的交易逻辑是复杂的，而每个链的处理方式也不太一样")]),t._v(" "),s("p",[t._v("然而在客户端开发的过程中, 交易逻辑的处理基本上大同小异")]),t._v(" "),s("p",[t._v("我们最好牢记在心")]),t._v(" "),s("p",[t._v("为了更好的更容易的理解, 我们采用发送 Token("),s("code",[t._v("Transfer Token")]),t._v(") 作为例子进行讲解.")]),t._v(" "),s("h3",{attrs:{id:"_1-构造一个-transaction-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-构造一个-transaction-对象","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 构造一个 Transaction 对象")]),t._v(" "),s("p",[t._v("假设 Alice 想给 Bob 转一些 Token, Alice 应当获知的信息如下:")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("toAddr")]),t._v(", Bob 的地址")]),t._v(" "),s("li",[s("code",[t._v("amount")]),t._v(", Bob 想收到的 Token 数量,这里我们假设是 1000 个 Zil")]),t._v(" "),s("li",[s("code",[t._v("gasLimit")]),t._v(", 交易所消耗的最大 Gas 值, 根据 Zilliqa 的设定, gasLimit 这里需要采用 Long 的数据类型")]),t._v(" "),s("li",[s("code",[t._v("gasPrice")]),t._v(", 交易所支付给矿工的 Gas 的单笔价值,根据 Zilliqa 的设定, gasPrice 最小值应为 100, 而我们只发送 BN 的数据类型")]),t._v(" "),s("li",[s("code",[t._v("version")]),t._v(", 协议的版本号, 这里我们设置为默认的 0")])]),t._v(" "),s("p",[t._v("然后你就可以使用 "),s("code",[t._v("laksa.transactions")]),t._v(" 来构造一个 Transaction 对象了")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/*\n    设置toAddr为Bob的地址\n    设置amount为1000\n    设置gasPrice为默认的100\n    设置gasLimit为例子中的1000\n    设置version为默认的0\n*/")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" transaction "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" laksa"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transactions"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token keyword"}},[t._v("new")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  toAddr"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'9bfec715a6bd658fcb62b0f8cc9bfa2ade71434a'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  amount"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" laksa"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toBN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1000")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  gasPrice"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" laksa"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("toBN")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("100")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  gasLimit"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" laska"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Long"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("fromNumber")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token number"}},[t._v("1000")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  version"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-使用帐号进行签名"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用帐号进行签名","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 使用帐号进行签名")]),t._v(" "),s("p",[t._v("做完了上一步，Transaction 对象构造完毕了，但是我们还不能直接向区块链进行发送")]),t._v(" "),s("p",[t._v("就像你使用支票进行支付，必须要签上自己的名字一样。")]),t._v(" "),s("p",[t._v("每一个 Transaction 都要进行签名，而你应该使用帐号进行处理。")]),t._v(" "),s("p",[t._v("首先确保你已经有了一个帐号，导入到 Wallet 或者 Account 对象")]),t._v(" "),s("p",[t._v("然后就使用"),s("code",[t._v("signTransaction")]),t._v("方法进行签名")]),t._v(" "),s("p",[t._v("而请记住，"),s("code",[t._v("signTransaction")]),t._v("方法会返回一个"),s("code",[t._v("Promise")]),t._v("， 因为这个方法的内在逻辑会向区块链请求更新帐号的余额和 nonce 数")]),t._v(" "),s("p",[t._v("而如果你的帐号是加密状态的，请提供密码作为第二个参数传入方法")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("// 假设你使用wallet导入一个账号")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 这个myAccount将包含访问区块链的内置方法")]),t._v("\n\n"),s("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myAccount "),s("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" laksa"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wallet"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("importAccountFromPrivateKey")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token constant"}},[t._v("YOUR_KEY")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 你也可以使用 `new laksa.Modules.Account()` 去构造一个帐号,")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 不过你必须手动构造 Messenger 和 Provider ，才能确保Account包含当前的区块链信息")]),t._v("\n\nmyAccount"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("signTransaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transaction"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signed "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signed"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 如果你的帐号加密了，请把密码作为字符串传入第二个参数")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// myAccount.signTransaction(transaction,password)")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("// 完成了加密过程，打印的结果中你可以看到signature这个属性下面有个长长的字符串")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3-发送已签名的-transaction-到区块链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-发送已签名的-transaction-到区块链","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 发送已签名的 Transaction 到区块链")]),t._v(" "),s("p",[t._v("完成了签名之后，你就可以发送到区块链了")]),t._v(" "),s("p",[t._v("这里至少有两种途径发送到区块链")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("Transaction.sendTransaction()")]),t._v(" ，在这之后，将返回 Transaction 对象，你可以继续对它进行操作.\n使用 "),s("code",[t._v("laksa.zil.createTransaction(SignedTransaction)")]),t._v(" ，你可以把签名后的 Transaction 作为参数传入.")]),t._v(" "),s("p",[t._v("然而两种方法有着不一样的输出\n第一种, "),s("code",[t._v("Transaction")]),t._v(" 会作为结果的一部分进行返回, 而你可以使用"),s("code",[t._v("then")]),t._v(" 对它进行进一步的操作.\n第二种, 将只会返回 RPC Response,你必须使用其他方法再对 Transaction 进行操作了.")]),t._v(" "),s("p",[t._v("我们将使用第一种方法来继续我们的教程")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("myAccount\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("signTransaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transaction"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signed "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" signed"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("sendTransaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sent "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("log")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sent"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * 你会看到一个返回的对象\n  {transaction:<Object:Transaction>,response:Response}\n */")]),t._v("\n")])])]),s("h3",{attrs:{id:"_4-确认一笔交易"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-确认一笔交易","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 确认一笔交易")]),t._v(" "),s("p",[t._v("在 Transaction 发送的时候，"),s("code",[t._v("laksa")]),t._v(" 会使用 RPC call.")]),t._v(" "),s("p",[t._v("而 RPC call 会返回一个 Response，如果没有发生错误的情况下，一个包含"),s("code",[t._v("TranID")]),t._v("的 Response 对象将会返回，而"),s("code",[t._v("TranID")]),t._v("将作为交易的查询单号")]),t._v(" "),s("p",[t._v("然而，并不是每一步交易都最终被区块链所接受，如果")]),t._v(" "),s("ol",[s("li",[t._v("你的交易参数不对，比如 gasLimit/gasPrice 并不符合当前的交易规则.")]),t._v(" "),s("li",[t._v("你的帐号余额不足, "),s("code",[t._v("laksa")]),t._v(" 不会自动帮你检查, 对于应用开发者,请记得检查并告知用户.")]),t._v(" "),s("li",[t._v("区块链发生了"),s("code",[t._v("拥堵")]),t._v(" , 又或者有一些不可知的错误发生(真实情况是很复杂的)")])]),t._v(" "),s("p",[t._v("因此，我们需要在交易发送之后，进行确认")]),t._v(" "),s("p",[t._v("在上一步中, 我们收到了像这样的对象:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   transaction"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Object"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v("Transaction"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n   response"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("Response"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("你可以看到"),s("code",[t._v("transaction")]),t._v(" 就是 Transaction 对象本身，而这里已经更新了发送的状态, 我们可以结合"),s("code",[t._v("response")]),t._v("中的内容进行进一步处理")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("/**\n * 使用transaction.confirm，并将TranID作为参数传入\n * 这个方法将进行RPC Call，并定时请求查询交易单\n */")]),t._v("\n\nmyAccount\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("signTransaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("transaction"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signed "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" signed"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("sendTransaction")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res "),s("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" res"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transaction"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("confirm")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TranID"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{attrs:{class:"token function"}},[t._v("then")]),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("console"),s("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("/**\n * 当交易单被确认或者拒绝，你会收到一个回执\n */")]),t._v("\n")])])]),s("p",[t._v("如果 Transaction 被区块链所接受, 你会获得"),s("code",[t._v("Transaction.receipt")]),t._v("，包含一个这样的对象："),s("code",[t._v("{cumulative_gas:string,success:boolean}")])]),t._v(" "),s("p",[t._v("当中， "),s("code",[t._v("cumulative_gas")]),t._v(" 表示了实际消耗的 Gas 费用.")]),t._v(" "),s("p",[t._v("而"),s("code",[t._v("success")]),t._v(" 中的 true 或者 false 将表示该交易是否成功完成，即刚才的 1000 Zil 有没有成功到达")]),t._v(" "),s("p",[t._v("如果 Transaction 被"),s("code",[t._v("confirm")]),t._v("所确认，返回的 "),s("code",[t._v("status")]),t._v(" Transaction 对象随之改变.")]),t._v(" "),s("p",[t._v("包含 "),s("code",[t._v("REJECTED")]),t._v(" 或者 "),s("code",[t._v("SUCCESS")]),t._v("，这里"),s("code",[t._v("REJECTED")]),t._v("对应着"),s("code",[t._v("success:false")]),t._v("，而"),s("code",[t._v("SUCCESS")]),t._v("显然对应着"),s("code",[t._v("success:true")])]),t._v(" "),s("p",[t._v("如果 Transaction 发送了，而没有被最终区块链所接受，则"),s("code",[t._v("SENT")]),t._v("的状态将维持不变。")])])}],!1,null,null,null);o.options.__file="Transaction.md";a.default=o.exports}}]);